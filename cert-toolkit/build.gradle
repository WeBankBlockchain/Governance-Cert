
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '0.0.1'

group = 'com.webank.certtool'

repositories {
	maven {
		url "http://maven.aliyun.com/nexus/content/groups/public/"
	}
	mavenLocal()
	mavenCentral()
}
configurations {
	// configuration that holds jars to include in the jar
	extraLibs
}
dependencies {
	testCompile 'junit:junit:4.12'
	compile 'org.slf4j:slf4j-api:1.7.30'
	compile ('org.projectlombok:lombok:1.18.6')
	annotationProcessor ('org.projectlombok:lombok:1.18.6')
	testCompile ('org.projectlombok:lombok:1.18.6')
	testAnnotationProcessor ('org.projectlombok:lombok:1.18.6')
	compile('ch.qos.logback:logback-core:1.2.3')
	compile('ch.qos.logback:logback-classic:1.2.3')
	compile "org.apache.commons:commons-lang3:3.6"
	compile "commons-io:commons-io:2.6"
	compile 'commons-codec:commons-codec:1.4'
	compile "com.fasterxml.jackson.core:jackson-core:2.9.6"
	compile "com.fasterxml.jackson.core:jackson-databind:2.9.6"
	compile "com.fasterxml.jackson.core:jackson-annotations:2.9.6"
	compile 'com.lhalcyon:bip32:1.0.0'
	compile 'org.web3j:core:3.4.0'
	compile 'com.lambdaworks:scrypt:1.4.0'
	compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.60'
	compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.60'
	compile 'cn.hutool:hutool-core:5.7.9'
	compile ('org.fisco-bcos.java-sdk:java-sdk:2.7.0')
	extraLibs fileTree(dir:'libs',include:['*.jar'])
	configurations.compile.extendsFrom(configurations.extraLibs)
}

configurations {
	all {
		exclude group: 'org.slf4j', module: 'slf4j-log4j12'
		exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources  {
			srcDir 'src/main/resources'
		}
	}
}

javadoc {
	options.addStringOption('Xdoclint:none', '-quiet')
	options.addStringOption('encoding', 'UTF-8')
	options.addStringOption('charSet', 'UTF-8')
}

jar {
	enabled = true
	destinationDir file('dist')
	archiveName project.name + '.jar'
	exclude '**/*.xml'
	exclude '**/*.properties'
	exclude '**/*.yml'
	from {
		configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
	}
	doLast {
		copy {
			from file('src/main/resources/')
			into 'dist/config'
		}
		copy {
			from configurations.runtime
			into 'dist/lib'
		}
	}
}
